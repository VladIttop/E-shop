{"version":3,"sources":["JS/animations.js"],"names":["toAnimate","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","element","isIntersecting","target","classList","add","remove","el","observe"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;AAC3D,IAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,UAACC,OAAO,EAAK;EACrDA,OAAO,CAACC,OAAO,CAAC,UAACC,OAAO,EAAK;IAC3B,IAAIA,OAAO,CAACC,cAAc,EAAE;MAC1BD,OAAO,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IACtC,CAAC,MAAM;MACLJ,OAAO,CAACE,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACzC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFZ,SAAS,CAACM,OAAO,CAAC,UAACO,EAAE;EAAA,OAAKV,QAAQ,CAACW,OAAO,CAACD,EAAE,CAAC;AAAA,EAAC","file":"animations.23eb84e2.js","sourceRoot":"..","sourcesContent":["const toAnimate = document.querySelectorAll(\".browse-list\");\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((element) => {\r\n    if (element.isIntersecting) {\r\n      element.target.classList.add(\"show\");\r\n    } else {\r\n      element.target.classList.remove(\"show\");\r\n    }\r\n  });\r\n});\r\ntoAnimate.forEach((el) => observer.observe(el));\r\n"]}